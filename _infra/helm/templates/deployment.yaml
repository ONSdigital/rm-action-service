deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    env: "{{ .Values.env }}"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "eu.gcr.io/rm-ras-sandbox/{{ .Values.image.repositoryName }}:{{ .Values.image.tag }}"
          ports:
            - name: http-server
              containerPort: 4041
          readinessProbe:
            httpGet:
              path: /info
              port: 4041
            initialDelaySeconds: 140
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /info
              port: 4041
            initialDelaySeconds: 140
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          env:
          - name: DB_HOST
            value: $(POSTGRES_SERVICE_HOST)
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: db-config
                key: db-port
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: db-config
                key: db-name
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: password
          - name: SECURITY_USER_NAME
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-user
          - name: SECURITY_USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-password
          - name: RABBITMQ_USERNAME
            valueFrom:
              secretKeyRef:
                name: rabbitmq
                key: rabbitmq-username
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: rabbitmq
                key: rabbitmq-password
          - name: SERVER_PORT
            value: "4041"
          - name: SECURITY_BASIC_ENABLED
            value: "false"
          - name: SPRING_DATASOURCE_URL
            value: "jdbc:postgresql://$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable"
          - name: LIQUIBASE_URL
            value: "jdbc:postgresql://$(DB_HOST):$(DB_PORT)/$(DB_NAME)"
          - name: RABBITMQ_HOST
            value: "$(RABBITMQ_SERVICE_HOST)"
          - name: RABBITMQ_PORT
            value: "5672"
          - name: CASE_SVC_CONNECTION_CONFIG_HOST
            value: "$(CASESVC_SERVICE_HOST)"
          - name: CASE_SVC_CONNECTION_CONFIG_PORT
            value: "$(CASESVC_SERVICE_PORT)"
          - name: COLLECTION_EXERCISE_SVC_CONNECTION_CONFIG_HOST
            value: "$(COLLECTIONEXERCISESVC_SERVICE_HOST)"
          - name: COLLECTION_EXERCISE_SVC_CONNECTION_CONFIG_PORT
            value: "$(COLLECTIONEXERCISESVC_SERVICE_PORT)"
          - name: DATA_GRID_ADDRESS
            value: "$(REDIS_MASTER_SERVICE_HOST):$(REDIS_MASTER_SERVICE_PORT)"
          - name: PARTY_SVC_CONNECTION_CONFIG_HOST
            value: "$(RAS_PARTY_SERVICE_HOST)"
          - name: PARTY_SVC_CONNECTION_CONFIG_PORT
            value: "$(RAS_PARTY_SERVICE_PORT)"
          - name: PARTY_SVC_CONNECTION_CONFIG_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: PARTY_SVC_CONNECTION_CONFIG_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: SURVEY_SVC_CONNECTION_CONFIG_HOST
            value: "$(SURVEYSVC_SERVICE_HOST)"
          - name: SURVEY_SVC_CONNECTION-CONFIG_PORT
            value: "$(SURVEYSVC_SERVICE_PORT)"
          - name: SAMPLE_SVC_CONNECTION_CONFIG_HOST
            value: "$(SAMPLESVC_HOST)"
          - name: SAMPLE_SVC_CONNECTION_CONFIG_PORT
            value: "$(SAMPLESVC_PORT)"
          - name: LIQUIBASE_USER
            value: "$(DB_USERNAME)"
          - name: LIQUIBASE_PASSWORD
            value: "$(DB_PASSWORD)"
          - name: SPRING_DATASOURCE_USERNAME
            value: "$(DB_USERNAME)"
          - name: SPRING_DATASOURCE_PASSWORD
            value: "$(DB_PASSWORD)"
          - name: SPRING_ZIPKIN_ENABLED
            value: "true"
          - name: SPRING_ZIPKIN_BASEURL
            value: "http://$(ZIPKIN_SERVICE_HOST):$(ZIPKIN_SERVICE_PORT)/"
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 1000m
              memory: 2048Mi
