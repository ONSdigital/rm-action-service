info:
  name: ${project.artifactId}
  version: ${project.version}
  origin: ${scm.url}
  commit: ${buildNumber}
  branch: ${scmBranch}
  built: ${timestamp}

# logging config here as a reminder as to how to override logback from cmd line
# ie -Dlogging.level.org.springframework=DEBUG
logging:
  useJson: false
  level:
    uk.gov.ons.ctp: INFO
    org.springframework: WARN
  profile: DEV

management:
  security:
    roles: SUPERUSER
    enabled: true
  health:
    rabbit:
      enabled: false

server:
  port: 8151
  servlet:
    path: /

spring:
  main:
    # Added as part of upgrade to 2.1 to quiet a an error where the 'restExceptionHandler' bean is defined twice.
    allow-bean-definition-overriding: true

  liquibase:
    user: postgres
    password: postgres
    default-schema: action
    url: jdbc:postgresql://localhost:5432/ras
    changeLog: classpath:/database/changelog-master.yml

  output:
    ansi:
      enabled: never
  application:
    name: ONS ActionService

  datasource:
    url: jdbc:postgresql://localhost:5432/ras
    username: actionsvc
    password: actionsvc
    driverClassName: org.postgresql.Driver
    continue-on-error: true
    tomcat:
      initial-size: 5
      max-active: 10
      max-idle: 5
      min-idle: 3

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        ddl-auto: update
        default_schema: action

    # Used to suppress warning that appeared after upgrade to spring 2.0. It defaults to true and we weren't setting
    # it so nothing changed.  Spring boot shows warnings if you don't explicitly set it.
    open-in-view: true

  security:
    user:
      name: admin
      password: secret

  # all about redis
data-grid:
  # where is redis
  address: localhost:6379
  # when we create a list of actions being distib, how long should the list remain in redis after app death
  list-time-to-live-seconds: 10
  # when we try and create a list of ids being distrib how long should we wait to get the lock
  list-time-to-wait-seconds: 10
  #  after app death how long should the lock on all lists remain
  lock-time-to-live-seconds: 3600

  report-lock-time-to-live-seconds: 300

  # calling the case svc endpoints
case-svc:
  case-group-path: /casegroups/{caseGroupId}
  case-by-case-get-path: /cases/{caseid}
  case-events-by-case-get-path: /cases/{caseid}/events
  case-events-by-case-post-path: /cases/{caseid}/events
  address-by-uprn-get-path: /addresses/{uprn}
  case-type-by-id-path: /casetypes/{casetypeid}
  generate-new-iac-for-case-post-path: /cases/{caseid}/iac
  number-of-cases-path: /casegroups/cases/{collectionExerciseId}
  connection-config:
    scheme: http
    host: localhost
    port: 8171
    username: admin
    password: secret
    # how many times should we attempt connection on failure
    retry-attempts: 10
    # sleep between retries
    retry-pause-milli-seconds: 5000
    # time to estab connection
    connect-timeout-milli-seconds: 5000
    # time to read response
    read-timeout-milli-seconds: 5000

  # calling the collectionexercise svc endpoints
collection-exercise-svc:
  collection-by-collection-exercise-get-path: /collectionexercises/{id}
  connection-config:
    scheme: http
    host: localhost
    port: 8145
    username: admin
    password: secret
    retry-attempts: 10
    retry-pause-milli-seconds: 5000
    connect-timeout-milli-seconds: 5000
    read-timeout-milli-seconds: 5000

  # calling the party svc endpoint
party-svc:
  party-by-sample-unit-type-and-id-path: /party-api/v1/parties/type/{sampleUnitType}/id/{partyId}
  connection-config:
    scheme: http
    host: localhost
    port: 8081
    username: admin
    password: secret
    retry-attempts: 1
    retry-pause-milli-seconds: 5000
    connect-timeout-milli-seconds: 5000
    read-timeout-milli-seconds: 5000

  # calling the survey svc endpoints
survey-svc:
  request-survey-path: /surveys/{surveyId}
  connection-config:
    scheme: http
    host: localhost
    port: 8080
    username: admin
    password: secret
    retry-attempts: 5
    retry-pause-milli-seconds: 5000
    connect-timeout-milli-seconds: 5000
    read-timeout-milli-seconds: 5000

  # queue related
redelivery-policy:
  maxRedeliveries: -1
  initialRedeliveryDelay: 1000
  redeliveryDelay: 1000

  # queue service related
rabbitmq:
  username: guest
  password: guest
  host: localhost
  port: 5672
  virtualhost: /

messaging:
  backoffInitial: 5000
  backoffMultiplier: 3
  backoffMax: 45000
  consumingThreads: 1
  maxAttempts: 3
  prefetchCount: 10

report-settings:
  cron-expression: "0 * * * * *"

retries:
  maxAttempts: 3
  backoff: 5000

gcp:
  project: ras-rm-sandbox
  notifyTopic: ras-rm-notify-test
  printFileTopic: ras-rm-print-file
  bucket:
    name: ras-rm-print-file
    prefix: ""